[case-study]
output = .
data = ./data
logging = DEBUG
observations = simulated_noisy_data.nc

[simulation]
input_files = config.json 
dimensions = time
data_variables = rabbits wolves
data_variables_max = nan nan
data_variables_min = 0 0

[model-parameters]
alpha.value = 0.1
alpha.min = 0 
alpha.max = 1
alpha.prior = lognorm(s=1,loc=0.1)
beta.value = 0.02
beta.prior = lognorm(s=1,loc=0.02)


[inference]
backend = pymoo
n_objectives = 1

[multiprocessing]
cores = 1

[inference.pyabc]
population_size = 100
minimum_epsilon = 0.1
min_eps_diff = 0.001
max_nr_populations = 50
sampler = MulticoreParticleParallelSampler

[inference.pyabc.redis]
port = 1803
password = simulate
database_path = redis_nap_stochastic.db
eval.model_id = 0
eval.history_id = -1
eval.n_predictions = 50

[inference.pymoo]
population_size = 10
max_nr_populations = 5
algorithm = UNSGA3
ftol = 0.01
xtol = 0.001
verbose = True