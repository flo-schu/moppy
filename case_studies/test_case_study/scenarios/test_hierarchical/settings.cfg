[case-study]
name = test_case_study
scenario = test_hierarchical
package = case_studies
modules = sim mod prob data plot
simulation = HierarchicalSimulation
observations = 
logging = DEBUG

[simulation]
y0 = wolves=Array([8,8,11,14,2,3,12,14,5,6,13,7]) rabbits=Array([44,63,43,49,57,54,38,35,65,61,64,53])
x_in = 
input_files = 
n_ode_states = 2
modeltype = deterministic
seed = 1

[data-structure]
wolves = dimensions=['id','time'] min=nan max=nan observed=False dimensions_evaluator=['id','time']
rabbits = dimensions=['id','time'] min=nan max=nan observed=False dimensions_evaluator=['id','time']

[solverbase]
batch_dimension = id
x_dim = time
exclude_kwargs_model = t time x_in y x Y X
exclude_kwargs_postprocessing = t time interpolation results

[jax-solver]
batch_dimension = id
x_dim = time
exclude_kwargs_model = t time x_in y x Y X
exclude_kwargs_postprocessing = t time interpolation results
diffrax_solver = Dopri5
rtol = 1e-06
atol = 1e-07
pcoeff = 0.0
icoeff = 1.0
dcoeff = 0.0
max_steps = 100000
throw_exception = True

[inference]
objective_function = total_average
n_objectives = 1
objective_names = 
extra_vars = 
n_predictions = 1

[model-parameters]
alpha_species = value=0.5 prior=halfnorm(scale=[[1],[3]],dims=('rabbit_species','experiment')) hyper=True free=True
alpha = value=0.5 prior=lognorm(s=0.1,scale=alpha_species[rabbit_species_index,experiment_index],dims=('id',)) hyper=True free=True
beta = value=0.02 prior=lognorm(s=[0.1],scale=0.02,dims=()) hyper=False free=True
gamma = value=0.3 hyper=False free=False
delta = value=0.01 hyper=False free=False

[error-model]

[multiprocessing]
cores = 1

[inference.pyabc]
sampler = SingleCoreSampler
population_size = 100
minimum_epsilon = 0.0
min_eps_diff = 0.0
max_nr_populations = 1000
database_path = /tmp/pyabc.db

[inference.pyabc.redis]
password = nopassword
port = 1111
eval.n_predictions = 50
eval.history_id = -1
eval.model_id = 0

[inference.pymoo]
algortihm = UNSGA3
population_size = 100
max_nr_populations = 1000
ftol = 1e-05
xtol = 1e-07
cvtol = 1e-07
verbose = True

[inference.numpyro]
gaussian_base_distribution = False
kernel = nuts
init_strategy = init_to_uniform
chains = 1
draws = 2000
warmup = 1000
thinning = 1
nuts_draws = 2000
nuts_step_size = 0.8
nuts_max_tree_depth = 10
nuts_target_accept_prob = 0.8
nuts_dense_mass = True
svi_iterations = 10000
svi_learning_rate = 0.0001

