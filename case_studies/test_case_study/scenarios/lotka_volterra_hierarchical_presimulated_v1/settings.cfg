[case-study]
name = test_case_study
scenario = lotka_volterra_hierarchical_presimulated_v1
package = case_studies
modules = sim mod prob data plot
simulation = HierarchicalSimulation
observations = 
logging = DEBUG

[simulation]
solver = JaxSolver
y0 = rabbits=Array([56,44,67,35,64,57,43,60,49,64,69,44,51,42,59,57,64,63,69,68,66,40,36,51,47,66,62,49,55,55,66,35,52,58,50,67,68,63,51,65,37,58,44,43,58,61,66,42,65,64,46,37,62,63,51,40,40,48,61,46,36,59,61,41,54,48,52,35,57,44,54,49,56,38,47,57,61,48,35,60,52,57,40,50,65,65,46,57,37,63,44,46,68,54,65,41,61,69,37,43,40,43,45,37,66,44,67,61,41,59,62,39,39,48,37,49,51,58,55,50]) wolves=Array([8,8,11,14,2,3,12,14,5,6,13,7,5,12,5,7,10,9,3,2,13,11,12,8,12,6,7,12,3,5,3,7,14,3,6,7,13,4,8,5,2,11,2,5,8,8,3,14,11,14,3,11,5,9,14,5,11,4,6,14,7,8,5,3,7,10,7,12,6,9,12,13,7,2,11,8,13,7,6,2,7,10,12,13,4,9,12,5,6,12,9,8,10,8,14,11,2,3,9,12,2,10,11,12,13,4,9,12,6,4,8,3,4,13,10,13,12,13,6,8])
x_in = 
input_files = 
n_ode_states = 2
batch_dimension = id
modeltype = deterministic
seed = 1

[data-structure]
rabbits = dimensions=['id','time'] min=0.0 max=1329.0 observed=True dimensions_evaluator=['id','time']
wolves = dimensions=['id','time'] min=0.0 max=1019.0 observed=True dimensions_evaluator=['id','time']

[solverbase]
x_dim = time
exclude_kwargs_model = t time x_in y x Y X
exclude_kwargs_postprocessing = t time interpolation results

[jax-solver]
x_dim = time
exclude_kwargs_model = t time x_in y x Y X
exclude_kwargs_postprocessing = t time interpolation results
diffrax_solver = Dopri5
rtol = 1e-06
atol = 1e-07
pcoeff = 0.0
icoeff = 1.0
dcoeff = 0.0
max_steps = 100000
throw_exception = False

[inference]
eps = 1e-08
objective_function = total_average
n_objectives = 1
objective_names = 
extra_vars = 
n_predictions = 1

[model-parameters]
alpha_species_hyper = value=0.0 dims=['rabbit_species'] prior=halfnorm(scale=5) hyper=True free=True
alpha_sigma = value=0.0 dims=[] prior=halfnorm(scale=1) hyper=True free=True
alpha_species = value=0.5 dims=['rabbit_species','experiment'] prior=lognorm(scale=[[alpha_species_hyper[0]],[alpha_species_hyper[1]]],s=0.1) hyper=True free=True
alpha = value=0.5 dims=['id'] prior=lognorm(s=alpha_sigma,scale=alpha_species[rabbit_species_index,experiment_index]) hyper=False free=True
beta = value=0.02 dims=[] prior=lognorm(s=1,scale=1) hyper=False free=True
gamma = value=0.3 dims=[] hyper=False free=False
delta = value=0.01 dims=[] hyper=False free=False

[error-model]
rabbits = norm(loc=0,scale=1,obs=(obs-rabbits)/jnp.sqrt(rabbits+1e-06))
wolves = norm(loc=0,scale=1,obs=(obs-wolves)/jnp.sqrt(wolves+1e-06))

[multiprocessing]
cores = 1

[inference.pyabc]
sampler = SingleCoreSampler
population_size = 100
minimum_epsilon = 0.0
min_eps_diff = 0.0
max_nr_populations = 1000
database_path = /tmp/pyabc.db

[inference.pyabc.redis]
password = nopassword
port = 1111
eval.n_predictions = 50
eval.history_id = -1
eval.model_id = 0

[inference.pymoo]
algortihm = UNSGA3
population_size = 100
max_nr_populations = 1000
ftol = 1e-05
xtol = 1e-07
cvtol = 1e-07
verbose = True

[inference.numpyro]
gaussian_base_distribution = True
kernel = svi
init_strategy = init_to_median
chains = 1
draws = 2000
warmup = 1000
thinning = 1
nuts_draws = 2000
nuts_step_size = 0.8
nuts_max_tree_depth = 10
nuts_target_accept_prob = 0.8
nuts_dense_mass = True
svi_iterations = 5000
svi_learning_rate = 0.005

